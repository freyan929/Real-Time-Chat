[{"/Users/student/Desktop/Real-Time-Chat/src/index.js":"1","/Users/student/Desktop/Real-Time-Chat/src/App.js":"2","/Users/student/Desktop/Real-Time-Chat/src/reportWebVitals.js":"3","/Users/student/Desktop/Real-Time-Chat/src/components/chat-component/index.js":"4","/Users/student/Desktop/Real-Time-Chat/src/components/Home/index.js":"5","/Users/student/Desktop/Real-Time-Chat/src/components/PageHome/index.js":"6","/Users/student/Desktop/Real-Time-Chat/src/components/ChatSearch/index.js":"7"},{"size":1553,"mtime":1638318901205,"results":"8","hashOfConfig":"9"},{"size":1555,"mtime":1638545334509,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1634408391054,"results":"11","hashOfConfig":"9"},{"size":3198,"mtime":1638589441403,"results":"12","hashOfConfig":"9"},{"size":577,"mtime":1635270102344,"results":"13","hashOfConfig":"9"},{"size":689,"mtime":1635787627730,"results":"14","hashOfConfig":"9"},{"size":713,"mtime":1635885541184,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ok075k",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/student/Desktop/Real-Time-Chat/src/index.js",[],["32","33"],"/Users/student/Desktop/Real-Time-Chat/src/App.js",[],"/Users/student/Desktop/Real-Time-Chat/src/reportWebVitals.js",[],"/Users/student/Desktop/Real-Time-Chat/src/components/chat-component/index.js",["34","35"],"import { useEffect, useState } from 'react';\nimport './style.css';\n\nimport io from 'socket.io-client';\nimport { render } from '@testing-library/react';\n\nvar date = new Date();\nvar s = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\nconst ChatComponent = (props) => {\n    const [messages, setMessages] = useState([]);\n    const [chatMsg, setChatMsg] = useState('');\n    const [userName, setUserName] = useState('');\n    const [showUser, setShowUser] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const newSocket = io(`http://localhost:8080/`);\n        setSocket(newSocket);\n\n        newSocket.on( 'message_sent', (data) => {\n            console.log('received message', data);\n            \n            messages.push(data);\n            setMessages([...messages]);\n        });\n\n        return () => newSocket.close();\n    }, [setSocket, messages]);\n\n    return (\n        <div className='chat-container'>\n            <div className='chat-header'>\n                <h2>{`${props.chatname}`}</h2>\n            </div>\n\n            <div className='chat-messages-container'>\n                {\n                    (messages.length === 0) && <p style={{width: '100%', textAlign: 'center'}}>No Messages to be Read :(</p>\n                }\n\n                {\n                    messages.map((message: string, name: string, index: number) => {\n                        return(\n                            <ChatMessageComponent key={message.msg + message.name + index} name={message.name} message={message.msg} time={message.time}></ChatMessageComponent>\n                        );\n                    })\n                }\n\n                <div className='line-with-text-container'>\n                    <p className='line-with-text'><span>{s}</span></p>\n                </div>\n            </div>\n\n            <form className='input-container' onSubmit={(e) => {\n                e.preventDefault();\n                setShowUser(true);\n\n                const data = {\n                    name: userName,\n                    msg: chatMsg,\n                    time: new Date()\n                };\n\n                setChatMsg('');\n\n                socket.emit('message_sent', data);\n                }}>\n\n                { \n                    (!showUser) &&\n                    <input placeholder={'Type your username...'} value={userName} onChange={e => {\n                        setUserName(e.target.value); setChatMsg('has joined the server')}}></input>\n                }\n\n                {\n                    (showUser) && (userName != ' ') &&\n                        <input placeholder={'Type a new message...'} value={chatMsg} onChange={(e)=>{\n                            setChatMsg(e.target.value);\n                    }}></input>\n                }\n                <button><strong>{'>>'}</strong></button>\n            </form>\n        </div>\n    );\n}\n\nconst ChatMessageComponent = (props) => {\n    return (\n        <div className='chat-message-container'>\n            <p style={{flexGrow:1}}><strong>{`${props.name} | ${props.message}`}</strong></p>\n            <p>{`${props.time}`}</p>\n        </div>\n    );\n}\n\nexport default ChatComponent;","/Users/student/Desktop/Real-Time-Chat/src/components/Home/index.js",[],"/Users/student/Desktop/Real-Time-Chat/src/components/PageHome/index.js",[],"/Users/student/Desktop/Real-Time-Chat/src/components/ChatSearch/index.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":77,"column":45,"nodeType":"46","messageId":"47","endLine":77,"endColumn":47},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]