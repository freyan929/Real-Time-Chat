{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Real-Time-Chat/real-time-chat/src/components/chat-component/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './style.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar d = new Date();\nvar n = d.getTimezoneOffset();\nvar timezone = n / -60;\n\nconst ChatComponent = props => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [chatMsg, setChatMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(`http://localhost:8080/`);\n    setSocket(newSocket);\n    newSocket.on('message_sent', data => {\n      console.log('received message', data);\n      messages.push(data);\n      setMessages([...messages]);\n    });\n    return () => newSocket.close();\n  }, [setSocket, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${props.chatname}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-container\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        children: \"No Messages to be Read :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 48\n      }, this), messages.map((message, name, index) => {\n        return /*#__PURE__*/_jsxDEV(ChatMessageComponent, {\n          name: message.name,\n          message: message.msg,\n          time: message.time\n        }, message.name + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-with-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line-with-text\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Oct 4, 2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: e => {\n        e.preventDefault();\n        const data = {\n          name: userName,\n          msg: chatMsg,\n          time: new Date()\n        };\n        setChatMsg('');\n        setUserName('');\n        socket.emit('message_sent', data);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: 'Type your username...',\n        value: userName,\n        onChange: e => {\n          setUserName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: 'Type a new message...',\n        value: chatMsg,\n        onChange: e => {\n          setChatMsg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: '>>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatComponent, \"Ypip2JYRmJkIVwgZm1atPE/e/RA=\");\n\n_c = ChatComponent;\n\nconst ChatMessageComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: `${props.name} | ${props.message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${props.time}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChatMessageComponent;\nexport default ChatComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatComponent\");\n$RefreshReg$(_c2, \"ChatMessageComponent\");","map":{"version":3,"sources":["/Users/student/Desktop/Real-Time-Chat/real-time-chat/src/components/chat-component/index.js"],"names":["useEffect","useState","io","d","Date","n","getTimezoneOffset","timezone","ChatComponent","props","messages","setMessages","chatMsg","setChatMsg","userName","setUserName","socket","setSocket","newSocket","on","data","console","log","push","close","chatname","length","width","textAlign","map","message","name","index","msg","time","e","preventDefault","emit","target","value","ChatMessageComponent","flexGrow"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './style.css';\n\nimport io from 'socket.io-client';\n\nvar d = new Date();\nvar n = d.getTimezoneOffset();\nvar timezone = n / -60;\n\nconst ChatComponent = (props) => {\n    const [messages, setMessages] = useState([]);\n    const [chatMsg, setChatMsg] = useState('');\n    const [userName, setUserName] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const newSocket = io(`http://localhost:8080/`);\n        setSocket(newSocket);\n\n        newSocket.on( 'message_sent', (data) => {\n            console.log('received message', data);\n            \n            messages.push(data);\n            setMessages([...messages]);\n        });\n\n        return () => newSocket.close();\n    }, [setSocket, messages]);\n\n    return (\n        <div className='chat-container'>\n            <div className='chat-header'>\n                <h2>{`${props.chatname}`}</h2>\n            </div>\n\n            <div className='chat-messages-container'>\n                {\n                    (messages.length === 0) && <p style={{width: '100%', textAlign: 'center'}}>No Messages to be Read :(</p>\n                }\n\n                {\n                    messages.map((message: string, name: string, index: number) => {\n                        return(\n                            <ChatMessageComponent key={message.name + index} name={message.name} message={message.msg} time={message.time}></ChatMessageComponent>\n                        );\n                    })\n                }\n\n                <div className='line-with-text-container'>\n                    <p className='line-with-text'><span>Oct 4, 2021</span></p>\n                </div>\n            </div>\n\n            <form className='input-container' onSubmit={(e) => {\n                e.preventDefault();\n\n                const data = {\n                    name: userName,\n                    msg: chatMsg,\n                    time: new Date()\n                };\n\n                setChatMsg('');\n                setUserName('');\n\n                socket.emit('message_sent', data);\n            }}>\n                <input placeholder={'Type your username...'} value={userName} onChange={(e)=>{\n                    setUserName(e.target.value);\n                }}></input>\n                <input placeholder={'Type a new message...'} value={chatMsg} onChange={(e)=>{\n                    setChatMsg(e.target.value);\n                }}></input>\n                <button><strong>{'>>'}</strong></button>\n            </form>\n        </div>\n    );\n}\n\nconst ChatMessageComponent = (props) => {\n    return (\n        <div className='chat-message-container'>\n            <p style={{flexGrow:1}}><strong>{`${props.name} | ${props.message}`}</strong></p>\n            <p>{`${props.time}`}</p>\n        </div>\n    );\n}\n\nexport default ChatComponent;"]},"metadata":{},"sourceType":"module"}