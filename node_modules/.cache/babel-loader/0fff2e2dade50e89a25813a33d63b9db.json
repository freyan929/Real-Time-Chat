{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Real-Time-Chat/real-time-chat/src/components/chat-component/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './style.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatComponent = props => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [chatMsg, setChatMsg] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io(`http://localhost:8080/`);\n    setSocket(newSocket);\n    newSocket.on('message_sent', data => {\n      console.log('received message', data);\n      messages.push(data);\n      setMessages([...messages]);\n    });\n    return () => newSocket.close();\n  }, [setSocket, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${props.chatname}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-container\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        children: \"No Messages to be Read :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(ChatMessageComponent, {\n            name: message.name,\n            message: message.msg,\n            time: message.time\n          }, message.name + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-with-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line-with-text\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Oct 4, 2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: e => {\n        e.preventDefault();\n        const data = {\n          name: socket.id,\n          msg: chatMsg,\n          time: new Date()\n        };\n        setChatMsg('');\n        socket.emit('message_sent', data);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: 'Type a new message...',\n        value: chatMsg,\n        onChange: e => {\n          setChatMsg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: '>>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatComponent, \"+Ss1rhC+xpB7rRRmBu7XoMt6kks=\");\n\n_c = ChatComponent;\n\nconst ChatMessageComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: `${props.name} | ${props.message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${props.time}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChatMessageComponent;\nexport default ChatComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatComponent\");\n$RefreshReg$(_c2, \"ChatMessageComponent\");","map":{"version":3,"sources":["/Users/student/Desktop/Real-Time-Chat/real-time-chat/src/components/chat-component/index.js"],"names":["useEffect","useState","io","ChatComponent","props","messages","setMessages","chatMsg","setChatMsg","socket","setSocket","newSocket","on","data","console","log","push","close","chatname","length","width","textAlign","map","message","index","name","msg","time","e","preventDefault","id","Date","emit","target","value","ChatMessageComponent","flexGrow"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;AAEA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAGT,EAAE,CAAE,wBAAF,CAApB;AACAQ,IAAAA,SAAS,CAACC,SAAD,CAAT;AAEAA,IAAAA,SAAS,CAACC,EAAV,CAAc,cAAd,EAA+BC,IAAD,IAAU;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AAEAR,MAAAA,QAAQ,CAACW,IAAT,CAAcH,IAAd;AACAP,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACH,KALD;AAOA,WAAO,MAAMM,SAAS,CAACM,KAAV,EAAb;AACH,GAZQ,EAYN,CAACP,SAAD,EAAYL,QAAZ,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAA,kBAAM,GAAED,KAAK,CAACc,QAAS;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,iBAESb,QAAQ,CAACc,MAAT,KAAoB,CAArB,iBAA2B;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFnC,eAKI;AAAA,kBAEQhB,QAAQ,CAACiB,GAAT,CAAa,CAACC,OAAD,EAAkBC,KAAlB,KAAoC;AAC7C,8BACI,QAAC,oBAAD;AAAiD,YAAA,IAAI,EAAED,OAAO,CAACE,IAA/D;AAAqE,YAAA,OAAO,EAAEF,OAAO,CAACG,GAAtF;AAA2F,YAAA,IAAI,EAAEH,OAAO,CAACI;AAAzG,aAA2BJ,OAAO,CAACE,IAAR,GAAeD,KAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJD;AAFR;AAAA;AAAA;AAAA;AAAA,cALJ,eAeI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,iCAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAyBI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAGI,CAAD,IAAO;AAC/CA,QAAAA,CAAC,CAACC,cAAF;AAEA,cAAMhB,IAAI,GAAG;AACTY,UAAAA,IAAI,EAAEhB,MAAM,CAACqB,EADJ;AAETJ,UAAAA,GAAG,EAAEnB,OAFI;AAGToB,UAAAA,IAAI,EAAE,IAAII,IAAJ;AAHG,SAAb;AAMAvB,QAAAA,UAAU,CAAC,EAAD,CAAV;AAEAC,QAAAA,MAAM,CAACuB,IAAP,CAAY,cAAZ,EAA4BnB,IAA5B;AACH,OAZD;AAAA,8BAaI;AAAO,QAAA,WAAW,EAAE,uBAApB;AAA6C,QAAA,KAAK,EAAEN,OAApD;AAA6D,QAAA,QAAQ,EAAGqB,CAAD,IAAK;AACxEpB,UAAAA,UAAU,CAACoB,CAAC,CAACK,MAAF,CAASC,KAAV,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cAbJ,eAgBI;AAAA,+BAAQ;AAAA,oBAAS;AAAT;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CAjED;;GAAM/B,a;;KAAAA,a;;AAmEN,MAAMgC,oBAAoB,GAAI/B,KAAD,IAAW;AACpC,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AAAG,MAAA,KAAK,EAAE;AAACgC,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA,6BAAwB;AAAA,kBAAU,GAAEhC,KAAK,CAACqB,IAAK,MAAKrB,KAAK,CAACmB,OAAQ;AAA1C;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAK,GAAEnB,KAAK,CAACuB,IAAK;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;MAAMQ,oB;AASN,eAAehC,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport './style.css';\n\nimport io from 'socket.io-client';\n\nconst ChatComponent = (props) => {\n    const [messages, setMessages] = useState([]);\n    const [chatMsg, setChatMsg] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const newSocket = io(`http://localhost:8080/`);\n        setSocket(newSocket);\n\n        newSocket.on( 'message_sent', (data) => {\n            console.log('received message', data);\n            \n            messages.push(data);\n            setMessages([...messages]);\n        });\n\n        return () => newSocket.close();\n    }, [setSocket, messages]);\n\n    return (\n        <div className='chat-container'>\n            <div className='chat-header'>\n                <h2>{`${props.chatname}`}</h2>\n            </div>\n\n            <div className='chat-messages-container'>\n                {\n                    (messages.length === 0) && <p style={{width: '100%', textAlign: 'center'}}>No Messages to be Read :(</p>\n                }\n\n                <div>\n                    {\n                        messages.map((message: string, index: number) => {\n                            return(\n                                <ChatMessageComponent key={message.name + index} name={message.name} message={message.msg} time={message.time}></ChatMessageComponent>\n                            );\n                        })\n                    }\n                </div>\n\n                <div className='line-with-text-container'>\n                    <p className='line-with-text'><span>Oct 4, 2021</span></p>\n                </div>\n            </div>\n\n            <form className='input-container' onSubmit={(e) => {\n                e.preventDefault();\n\n                const data = {\n                    name: socket.id,\n                    msg: chatMsg,\n                    time: new Date()\n                };\n\n                setChatMsg('');\n\n                socket.emit('message_sent', data);\n            }}>\n                <input placeholder={'Type a new message...'} value={chatMsg} onChange={(e)=>{\n                    setChatMsg(e.target.value);\n                }}></input>\n                <button><strong>{'>>'}</strong></button>\n            </form>\n        </div>\n    );\n}\n\nconst ChatMessageComponent = (props) => {\n    return (\n        <div className='chat-message-container'>\n            <p style={{flexGrow:1}}><strong>{`${props.name} | ${props.message}`}</strong></p>\n            <p>{`${props.time}`}</p>\n        </div>\n    );\n}\n\nexport default ChatComponent;"]},"metadata":{},"sourceType":"module"}