{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Real-Time-Chat/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nconst io = require(\"socket.io\")(8900, {\n  cors: {\n    origin: \"http://localhost:3000\"\n  }\n});\n\nlet users = [];\n\nconst addUser = (userId, socketId) => {\n  !users.some(user => user.userId === userId) && users.push({\n    userId,\n    socketId\n  });\n};\n\nconst removeUser = socketId => {\n  users = users.filter(user => user.socketId !== socketId);\n};\n\nconst getUser = userId => {\n  return users.find(user => user.userId === userId);\n};\n\nio.on(\"connection\", socket => {\n  //when ceonnect\n  console.log(\"a user connected.\"); //take userId and socketId from user\n\n  socket.on(\"addUser\", userId => {\n    addUser(userId, socket.id);\n    io.emit(\"getUsers\", users);\n  }); //send and get message\n\n  socket.on(\"sendMessage\", ({\n    senderId,\n    receiverId,\n    text\n  }) => {\n    const user = getUser(receiverId);\n    io.to(user.socketId).emit(\"getMessage\", {\n      senderId,\n      text\n    });\n  }); //when disconnect\n\n  socket.on(\"disconnect\", () => {\n    console.log(\"a user disconnected!\");\n    removeUser(socket.id);\n    io.emit(\"getUsers\", users);\n  });\n}); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/student/Desktop/Real-Time-Chat/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById","io","require","cors","origin","users","addUser","userId","socketId","some","user","push","removeUser","filter","getUser","find","on","socket","console","log","id","emit","senderId","receiverId","text","to"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;;AAMA,MAAMC,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqB,IAArB,EAA2B;AACpCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ;AAD8B,CAA3B,CAAX;;AAKA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACpC,GAACH,KAAK,CAACI,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACH,MAAL,KAAgBA,MAArC,CAAD,IACEF,KAAK,CAACM,IAAN,CAAW;AAAEJ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAX,CADF;AAED,CAHD;;AAKA,MAAMI,UAAU,GAAIJ,QAAD,IAAc;AAC/BH,EAAAA,KAAK,GAAGA,KAAK,CAACQ,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAzC,CAAR;AACD,CAFD;;AAIA,MAAMM,OAAO,GAAIP,MAAD,IAAY;AAC1B,SAAOF,KAAK,CAACU,IAAN,CAAYL,IAAD,IAAUA,IAAI,CAACH,MAAL,KAAgBA,MAArC,CAAP;AACD,CAFD;;AAIAN,EAAE,CAACe,EAAH,CAAM,YAAN,EAAqBC,MAAD,IAAY;AAC9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAF8B,CAI9B;;AACAF,EAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAsBT,MAAD,IAAY;AAC/BD,IAAAA,OAAO,CAACC,MAAD,EAASU,MAAM,CAACG,EAAhB,CAAP;AACAnB,IAAAA,EAAE,CAACoB,IAAH,CAAQ,UAAR,EAAoBhB,KAApB;AACD,GAHD,EAL8B,CAU9B;;AACAY,EAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,CAAC;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,GAAD,KAAoC;AAC3D,UAAMd,IAAI,GAAGI,OAAO,CAACS,UAAD,CAApB;AACAtB,IAAAA,EAAE,CAACwB,EAAH,CAAMf,IAAI,CAACF,QAAX,EAAqBa,IAArB,CAA0B,YAA1B,EAAwC;AACtCC,MAAAA,QADsC;AAEtCE,MAAAA;AAFsC,KAAxC;AAID,GAND,EAX8B,CAmB9B;;AACAP,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAP,IAAAA,UAAU,CAACK,MAAM,CAACG,EAAR,CAAV;AACAnB,IAAAA,EAAE,CAACoB,IAAH,CAAQ,UAAR,EAAoBhB,KAApB;AACD,GAJD;AAKD,CAzBD,E,CA2BA;AACA;AACA;;AACAR,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nconst io = require(\"socket.io\")(8900, {\n  cors: {\n    origin: \"http://localhost:3000\",\n  },\n});\nlet users = [];\n\nconst addUser = (userId, socketId) => {\n  !users.some((user) => user.userId === userId) &&\n    users.push({ userId, socketId });\n};\n\nconst removeUser = (socketId) => {\n  users = users.filter((user) => user.socketId !== socketId);\n};\n\nconst getUser = (userId) => {\n  return users.find((user) => user.userId === userId);\n};\n\nio.on(\"connection\", (socket) => {\n  //when ceonnect\n  console.log(\"a user connected.\");\n\n  //take userId and socketId from user\n  socket.on(\"addUser\", (userId) => {\n    addUser(userId, socket.id);\n    io.emit(\"getUsers\", users);\n  });\n\n  //send and get message\n  socket.on(\"sendMessage\", ({ senderId, receiverId, text }) => {\n    const user = getUser(receiverId);\n    io.to(user.socketId).emit(\"getMessage\", {\n      senderId,\n      text,\n    });\n  });\n\n  //when disconnect\n  socket.on(\"disconnect\", () => {\n    console.log(\"a user disconnected!\");\n    removeUser(socket.id);\n    io.emit(\"getUsers\", users);\n  });\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}